#include <iostream>
using namespace std;
struct Node
{
    int d;
    Node *next;
    Node *prev;
};
Node *first(int d);
void add(Node **pend, int d);
void printlist(Node *list);
Node *sortirovka(Node *list1, Node *list2);
void addthirdlist(Node **pbeg3, Node **pend3, int value);

int main()
{
    int num, count;
    cout<<"Введите количество элементов первого линейного списка: ";
    cin>>count;
    cout<<"Введите "<<count<< " элементы первого линейного списка: ";
    cin>>num;
    Node *pbeg1=first(num);
    Node *pend1=pbeg1;
    for (int i=1; i<count; i++)
    {
        cin>>num;
        add(&pend1, num);
    }
    cout<<"Введите количество элементов второго линейного списка: ";
    cin>>count;
    cout<<"Введите "<<count<< " элементы второго линейного списка: ";
    cin>>num;
    Node *pbeg2=first(num);
    Node *pend2=pbeg2;
    for (int i=1; i<count; i++)
    {
        cin>>num;
        add(&pend2, num);
    }
    cout<<"Первый линейный список: ";
    printlist(pbeg1);
    cout<<"Второй линейный список: ";
    printlist(pbeg2);
    Node *pbeg3=sortirovka(pbeg1, pbeg2);
    cout<<"Третий сортированный линейный список: ";
    printlist(pbeg3);
    return 0;
}  
Node *first(int d)
{
    Node *pv=new Node;
    pv->d=d;
    pv->next;
    pv->prev=0;
    return pv;
}
void add(Node **pend, int d)
{
    Node *pv=new Node;
    pv->d=d;
    pv->next=0;
    pv->prev=*pend;
    (*pend)->next=pv;
    *pend=pv;
}
void printlist(Node *list)
{
    Node *pv=list;
    while (pv)
    {
        cout<<pv->d<<" ";
        pv=pv->next;
    }
    cout<<endl;
}
void addthirdlist(Node **pbeg3, Node **pend3, int value)
{
    if (!*pbeg3)
    {
        *pbeg3=first(value);
        *pend3=*pbeg3;
    }
    else
    {
        add(pend3, value);
    }
} 
Node *sortirovka(Node *list1, Node *list2)
{
    Node *pbeg3=0;
    Node *pend3=0;
    Node *pv=list1;
    
    while (pv)
    {
        if (pv->d<0)
        {
        addthirdlist(&pbeg3, &pend3, pv->d);
        }
    pv=pv->next;
    }
    pv=list2;
    
    while (pv)
    {
        if (pv->d<0)
        {
            addthirdlist(&pbeg3, &pend3, pv->d);
        }
        pv=pv->next;
    }
    
    pv=list1;
    while (pv)
    {
        if (pv->d==0)
        {
            addthirdlist(&pbeg3, &pend3, pv->d);
        }
        pv=pv->next;
    }
    
    pv=list2;
    while (pv){
        if (pv->d==0)
        {
            addthirdlist(&pbeg3, &pend3, pv->d);
        }
        pv=pv->next;
    }
    pv=list1;
    while (pv)
    {
        if (pv->d>0)
        {
            addthirdlist(&pbeg3, &pend3, pv->d);
        }
        pv=pv->next;
    }
    pv=list2;
    while (pv)
    {
        if (pv->d>0)
        {
            addthirdlist(&pbeg3, &pend3, pv->d);
        }
        pv=pv->next;
    }
    return pbeg3;
}
